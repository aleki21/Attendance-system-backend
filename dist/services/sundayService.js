import { db } from "../config/db.js";
import { events } from "../db/schema/index.js";
import { eq, and } from "drizzle-orm";
import cron from "node-cron";
export class SundayService {
    static async ensureSundayServiceExists() {
        try {
            // Get current time in Kenya (UTC+3)
            const now = new Date();
            const kenyaTime = new Date(now.getTime() + (3 * 60 * 60 * 1000));
            const todayInKenya = kenyaTime.toISOString().split('T')[0];
            console.log(`🇰🇪 Checking Sunday service for Kenya date: ${todayInKenya}`);
            console.log(`🕒 Current UTC time: ${now.toISOString()}`);
            console.log(`🕒 Current Kenya time: ${kenyaTime.toISOString()}`);
            // Only proceed if today is Sunday in Kenya time (0 = Sunday)
            if (kenyaTime.getDay() !== 0) {
                console.log(`ℹ️  Not Sunday in Kenya (day ${kenyaTime.getDay()}), skipping Sunday service check`);
                return { created: false, reason: 'Not Sunday' };
            }
            // Check if Sunday service already exists for today
            const existingService = await db
                .select()
                .from(events)
                .where(and(eq(events.date, todayInKenya), eq(events.eventType, 'sunday_service')));
            // If no service exists, create it
            if (existingService.length === 0) {
                const [newEvent] = await db
                    .insert(events)
                    .values({
                    name: `Sunday Service - ${kenyaTime.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}`,
                    eventType: 'sunday_service',
                    date: todayInKenya,
                    autoGenerated: true,
                    createdBy: null // System user
                })
                    .returning();
                console.log(`✅ Auto-created Sunday service for ${todayInKenya}`);
                return { created: true, event: newEvent };
            }
            console.log(`ℹ️  Sunday service already exists for ${todayInKenya}`);
            return { created: false, reason: 'Already exists' };
        }
        catch (error) {
            console.error('❌ Failed to ensure Sunday service:', error);
            return { created: false, reason: 'Error', error };
        }
    }
    static startDailyCheck() {
        // Run every day at 6:00 AM Kenya time (3:00 AM UTC)
        // Since node-cron uses server time, we need to adjust for UTC
        // 6:00 AM Kenya time = 3:00 AM UTC
        cron.schedule('0 3 * * *', async () => {
            console.log('🕒 Running daily Sunday service check (6:00 AM Kenya time)...');
            await this.ensureSundayServiceExists();
        });
        console.log('✅ Sunday service daily check scheduled (6:00 AM Kenya time / 3:00 AM UTC daily)');
    }
    // Alternative: If you want to run at 6:00 AM local server time instead
    static startDailyCheckLocal() {
        // Run every day at 6:00 AM local server time
        cron.schedule('0 6 * * *', async () => {
            console.log('🕒 Running daily Sunday service check (6:00 AM local time)...');
            await this.ensureSundayServiceExists();
        });
        console.log('✅ Sunday service daily check scheduled (6:00 AM local time daily)');
    }
    // Manual trigger for testing or emergency use
    static async manualTrigger() {
        console.log('🔄 Manually triggering Sunday service check...');
        return await this.ensureSundayServiceExists();
    }
}
